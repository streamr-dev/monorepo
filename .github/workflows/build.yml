name: build

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build
        uses: ./.github/workflows/reusable/cached-build
      - name: versions
        run: npm run versions
      - name: check
        run: npm run check
      - name: eslint
        run: npm run eslint
  test-utils:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test
        working-directory: 'packages/test-utils'
        run: npm run test
  utils:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test
        working-directory: 'packages/utils'
        run: npm run test
  protocol:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test
        working-directory: 'packages/protocol'
        run: npm run test
  network:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test nodejs
        working-directory: 'packages/network'
        run: npm run test
      - name: test browser
        working-directory: 'packages/network'
        run: |
          sudo apt-get install xvfb
          xvfb-run --auto-servernum npm run test-browser
  tracker:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test
        working-directory: 'packages/network-tracker'
        run: npm run test
  client:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test-unit
        working-directory: 'packages/client'
        run: npm run test-unit
      - name: test-integration
        working-directory: 'packages/client'
        run: npm run test-integration
  broker:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - name: test-unit
        working-directory: 'packages/broker'
        run: npm run test-unit
  client-e2e-chunkify:
    needs: [ build ]
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - id: set-test-chunks
        name: Set Chunks
        working-directory: 'packages/client'
        run: echo "::set-output name=test-chunks::$(npx jest --listTests --json test/end-to-end | jq -cM '[_nwise(length / 2 | ceil)]')"
      - id: set-test-chunk-ids
        name: Set Chunk IDs
        working-directory: 'packages/client'
        run: echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
  client-e2e:
    needs: [ client-e2e-chunkify ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: ${{ fromJson(needs['client-e2e-chunkify'].outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: "cassandra init-keyspace parity-sidechain-node0 graph-deploy-streamregistry-subgraph chainlink"
      - name: run brokers and trackers
        uses: ./.github/workflows/reusable/run-brokers-and-trackers
      - name: test
        working-directory: 'packages/client'
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs npx jest
        env:
          CHUNKS: ${{ needs['client-e2e-chunkify'].outputs['test-chunks'] }}
  broker-e2e:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: "cassandra init-keyspace parity-sidechain-node0 graph-deploy-streamregistry-subgraph"
      - name: test
        working-directory: 'packages/broker'
        run: npm run test-integration
