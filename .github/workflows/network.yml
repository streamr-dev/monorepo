name: Network â€“ Lint, Test and Publish

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron:  '0 0 * * *'

defaults:
  run:
    working-directory: packages/network

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          all_but_latest: true
          access_token: ${{ github.token }}
  test:
    name: Lint & Test on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2.3.5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            'package-lock.json'
            'packages/*/package-lock.json'
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npm run bootstrap-pkg streamr-network
      - run: npm run eslint
      - run: npm run test-unit
        env:
          CI: true
      - name: Run test-integration
        run: |
          ulimit -c unlimited
          mkdir -p /tmp/cores
          chmod a+rwx /tmp/cores
          echo "/tmp/cores/core.%p" | sudo tee /proc/sys/kernel/core_pattern
          npm run test-integration
        env:
          CI: true
      - if: failure()
        name: Print core dump
        run: |
          if ls /tmp/cores/core.* 1> /dev/null 2>&1; then
            echo "Core dump found, printing stack trace..."
            sudo apt-get install -y gdb > /dev/null
            for c in /tmp/cores/core.*; do
              gdb node --core=$c --eval-command="set pagination off" --eval-command="info threads" --eval-command="backtrace" --eval-command="quit"
              done
          else
            echo "No core dump found."
          fi

  test-browser:
    name: Test on Browser Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: 'npm'
          cache-dependency-path: |
            'package-lock.json'
            'packages/*/package-lock.json'
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-network --include-dependencies
          sudo apt-get install xvfb
      - run: xvfb-run --auto-servernum npm run test-browser
        env:
          CI: true

  publish:
    needs: [test]
    name: Publishing main using Node 14
    runs-on: ubuntu-latest

    # run job only for tags and skip for cron
    if: false && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    steps:
      - name: Get the release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - uses: actions/checkout@v2.3.5
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
          cache-dependency-path: |
            'package-lock.json'
            'packages/*/package-lock.json'
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npm run bootstrap-pkg streamr-network

      - name: Publish beta ${{ steps.get_version.outputs.VERSION }}
        # if tag includes beta keyword
        if: contains(steps.get_version.outputs.VERSION, 'beta') == true
        run: npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest ${{ steps.get_version.outputs.VERSION }}
        # if tag doesn't include beta keyword
        if: contains(steps.get_version.outputs.VERSION, 'beta') == false
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
