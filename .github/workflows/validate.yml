name: validate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - name: build
        uses: ./.github/workflows/reusable/cached-build
      - run: npm run versions
      - run: npm run check
      - run: npm run eslint
  test-utils:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: test-utils
  utils:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: utils
      command: |
        npm run test
        xvfb-run --auto-servernum npm run test-browser
  protocol:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: protocol
  proto-rpc:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: proto-rpc
      command: |
        npm run test
        xvfb-run --auto-servernum npm run test-browser
  dht:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: dht
  dht-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: dht
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser
  trackerless-network:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: trackerless-network
      command: |
        npm run test-unit
        npm run test-integration
        npm run test-e2e
  trackerless-network-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: trackerless-network
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser
  client:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: client
      command: |
        npm run test-unit
        npm run test-integration
        npm run docs
  client-e2e:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: client
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain ens-sync-script
      run-brokers: true
      command: npm run test-end-to-end
  broker:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: broker
      command: npm run test-unit
  broker-e2e:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: broker
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-entry-point: true
      command: npm run test-integration
  broker-e2e-fast:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: broker
      docker-services: cassandra init-keyspace parity-sidechain-node0 graph-deploy-streamregistry-subgraph deploy-network-subgraphs deploy-network-subgraphs-fastchain
      run-entry-point: true
      command: npm run test-operator-plugins
  client-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: client
      docker-services: init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-brokers: true
      command: npm run test-browser
  cli-tools:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: cli-tools
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-brokers: true
      command: npm run test
  broker-docker-image:
    uses: ./.github/workflows/docker-build.yml
    with:
      docker_file: Dockerfile.broker
      image_name: streamr/broker-node
      test_services_to_start: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain broker-node-storage-1 
      build_platforms: linux/amd64
      test_script: bash ./.github/healthcheck.sh http://localhost:8891/info streamr-dev-broker-node-storage-1
