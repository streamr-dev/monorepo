---
# Lint, Test and Publish
name: Broker

on:
  push:
    tags:
      - "*"
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron: '0 0 * * *'
  workflow_dispatch:

concurrency:
  group: broker-build-${{ github.head_ref }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: packages/broker

jobs:
  test-unit:
    name: Test Unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version-file: '.nvmrc'

      - name: bootstrap # client needs to be built separately due to NET-870
        working-directory: './'
        run: |
          npm run bootstrap-pkg --package=streamr-client
          npm run bootstrap-pkg --package=streamr-broker
      - run: npm run eslint
      - run: npm run test-unit

  test-integration:
    name: Test Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version-file: '.nvmrc'
      - name: bootstrap # client needs to be built separately due to NET-870
        working-directory: './'
        run: |
          npm run bootstrap-pkg --package=streamr-client
          npm run bootstrap-pkg --package=streamr-broker
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: "cassandra init-keyspace parity-sidechain-node0 graph-deploy-streamregistry-subgraph"
      - run: npm run test-integration
        env:
          CI: true
          LOG_LEVEL: warn
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)

  test-docker:
    name: "Docker Image: test"
    uses: ./.github/workflows/docker-build.yml
    with:
      docker_file: ./Dockerfile.broker
      image_name: streamr/broker-node
      test_services_to_start: "parity-node0 broker-node-no-storage-1"
      build_platforms: linux/amd64
      test_script: |
        for (( i=0; i < 5; i=i+1 )); do
            curl -s http://localhost:8791/info;
            res=$?;
            if test "$res" != "0"; then
                echo "Attempting to connect to broker retrying in $wait_time seconds";
                sleep $wait_time;
                wait_time=$(( 2*wait_time )) ;
            else
                exit 0
            fi;
        done;
        exit 1


  docker-push:
    name: "Docker Image: push"
    needs: [test-unit, test-integration, test-docker]
    # only push for nightly runs and manual triggers
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/docker-build.yml
    with:
      docker_file: ./Dockerfile.broker
      image_name: streamr/broker-node
      build_platforms: linux/amd64,linux/arm64
      push_image: true
      test_success: ${{ !(needs.test-unit.result == 'failure' || needs.test-integration.result == 'failure' || needs.test-docker.result == 'failure') }}
    secrets:
      dockerhub_username: ${{secrets.DOCKERHUB_USERNAME}}
      dockerhub_token: ${{secrets.DOCKERHUB_TOKEN}}
