---
# Lint, Unit, Integration Tests
# Any tests that can run without building should go in here.
name: Client

# Be sure to update both workflow files if you edit any env or trigger config
env:
  CI: true
  DEBUG_COLORS: true
  DEBUG: "Streamr*"
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
concurrency:
  group: client-code-build-${{ github.head_ref }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: packages/client

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version-file: '.nvmrc'
      - name: bootstrap and build
        working-directory: './'
        run: |
          npm run bootstrap-pkg streamr-client
          npm run build --workspace=streamr-client
      - run: npm run eslint

  test:
    name: Test Unit
    runs-on: ubuntu-latest
    env:
      TEST_REPEATS: 1
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache-dependency-path: package-lock.json
          cache: 'npm'
          node-version-file: '.nvmrc'
          check-latest: true
      - name: bootstrap and build
        working-directory: './'
        run: |
          npm run bootstrap-pkg streamr-client
          npm run build --workspace=streamr-client
      - name: test-unit
        timeout-minutes: 7
        run: npm run test-unit

  integration:
    name: Test Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v3
        with:
          cache-dependency-path: package-lock.json
          cache: 'npm'
          node-version-file: '.nvmrc'
          check-latest: true
      - name: bootstrap and build
        working-directory: './'
        run: |
          npm run bootstrap-pkg streamr-client
          npm run build --workspace=streamr-client
      - name: Run tests
        run: npm run test-integration

  end-to-end:
    name: "Test End-to-End"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache-dependency-path: package-lock.json
          cache: 'npm'
          check-latest: true
          node-version-file: '.nvmrc'
      - name: bootstrap and build
        working-directory: './'
        run: |
          npm run bootstrap-pkg streamr-client
          npm run build --workspace=streamr-client
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: "cassandra init-keyspace parity-sidechain-node0 graph-deploy-streamregistry-subgraph chainlink"
      - name: start trackers and brokers
        uses: ./.github/workflows/reusable/run-brokers-and-trackers
      - name: Run tests
        run: npm run test-end-to-end
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.0
        with:
          dest: 'logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-logs-${{ matrix.test-name }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt}}
          path: 'logs'
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
