name: "Docker build"

on:
  workflow_call:
    inputs:
      docker_file:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v1-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          driver-opts: |
            network=host
      - name: Build
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: ${{inputs.docker_file}}
          platforms: linux/amd64
          push: false
          load: true
          build-args: |
            NODE_ENV=development
          tags: streamr/broker-node:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: "parity-node0 broker-node-no-storage-1"
      - run: |
          for (( i=0; i < 5; i=i+1 )); do
              curl -s http://localhost:8791/volume;
              res=$?;
              if test "$res" != "0"; then
                  echo "Attempting to connect to broker retrying in $wait_time seconds";
                  sleep $wait_time;
                  wait_time=$(( 2*wait_time )) ;
              else
                  exit 0
              fi;
          done;
          exit 1
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.0
        with:
          dest: 'logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-logs-node${{ matrix.node-version }}--${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt}}
          path: 'logs'
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
