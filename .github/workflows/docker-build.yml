name: "Docker build"

on:
  workflow_call:
    inputs:
      docker_file:
        type: string
        required: true
      test_services_to_start:
        type: string
      test_script:
        type: string
      push_image:
        type: boolean
      build_platforms:
        type: string
        required: true

    secrets:
      dockerhub_username:
        description: 'Required if the docker image is pushed'
        required: false
      dockerhub_token:
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v1-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          driver-opts: |
            network=host
      - uses: docker/login-action@v1.14.1
        if: ${{inputs.push_image}}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: ${{inputs.docker_file}}
          platforms: ${{inputs.build_platforms}}
          push: false
          load: true
          build-args: |
            NODE_ENV=development
          tags: streamr/broker-node:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Start Streamr Docker Stack
        if: ${{inputs.test_services_to_start && inputs.test_script }}
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0
        with:
          services-to-start: ${{inputs.test_services_to_start}}
      - name: Run test script
        if: ${{inputs.test_services_to_start && inputs.test_script }}
        run: ${{inputs.test_script}}
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.0
        with:
          dest: 'logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-logs-node${{ matrix.node-version }}--${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt}}
          path: 'logs'
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
