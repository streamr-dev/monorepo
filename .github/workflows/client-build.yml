# Any tests that need the built code should go in here.
name: Client â€“ Test Build

# Be sure to update both workflow files if you edit any env or trigger config
env:
  CI: true
  DEBUG_COLORS: true
  DEBUG: "Streamr*"
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron:  '0 0 * * *'

defaults:
  run:
    working-directory: packages/client
# Be sure to update both workflow files if you edit any env or trigger config

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
  build:
    name: Run build using Node 14.x
    runs-on: ubuntu-latest
    env:
      BUNDLE_ANALYSIS: true
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - name: npm run build
        run: npm run build-production
      - uses: actions/upload-artifact@v2
        with:
          name: client-build
          path: packages/client/dist

  test-exports:
    name: Test Exports using Node 16.x
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/download-artifact@v2
        with:
          name: client-build
          path: packages/client/dist
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - name: test-types
        run: npm run test-types
      - name: npm run test-exports
        run: npm run test-exports

  browser-realtime:
    name: Test Browser Realtime
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - uses: actions/download-artifact@v2
        with:
          name: client-build
          path: packages/client/dist
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge brokers trackers nginx smtp"
      - uses: nick-invision/retry@v2
        name: Run Realtime Test
        with:
          max_attempts: 3
          timeout_minutes: 3
          retry_on: error
          command: cd packages/client && npm run test-browser-realtime

  browser-resend:
    name: Test Browser Realtime + Resend
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - uses: actions/download-artifact@v2
        with:
          name: client-build
          path: packages/client/dist
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge brokers trackers nginx smtp"
      - uses: nick-invision/retry@v2
        name: Run Resend Test
        with:
          max_attempts: 3
          timeout_minutes: 3
          retry_on: error
          command: cd packages/client && npm run test-browser-resend

  benchmarks:
    name: Test Benchmark using Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v2
        with:
          name: client-build
          path: packages/client/dist
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge brokers trackers nginx smtp"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - name: benchmark publish
        timeout-minutes: 15
        run: DEBUG='' npm run benchmark-publish > benchmark-publish.txt
      - name: benchmark subscribe
        timeout-minutes: 15
        run: DEBUG='' npm run benchmark-subscribe > benchmark-subscribe.txt
      - uses: actions/upload-artifact@v2
        with:
          name: client-benchmarks
          path: |
              packages/client/benchmark-publish.txt
              packages/client/benchmark-subscribe.txt

