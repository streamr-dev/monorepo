---
name: Cross-Client Testing

# Be sure to update both workflow files if you edit any env or trigger config
env:
  CI: true
  DEBUG_COLORS: true
  DEBUG: "Streamr*"
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron: '0 0 * * *'
# Be sure to update both workflow files if you edit any env or trigger config
concurrency:
  group: cross-client-testing-build-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-image:
    # >> use monorepo brokers/trackers with streamr-docker-dev
    # For now, builds docker image and runs with streamr-docker-dev so we
    # don't have to worry about backgrounding processes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: "16.x"
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Cache Broker Docker Image
        id: cache-broker-image
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-broker-docker-image
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          driver-opts: |
            network=host
      - run: mkdir -p /tmp/docker-cache
      - name: Build
        uses: docker/build-push-action@v2.7.0
        if: steps.cache-broker-image.outputs.cache-hit != 'true'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          outputs: type=docker,dest=/tmp/docker-cache/broker-image.tar
          tags: streamr/broker-node:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      # << use monorepo brokers/trackers with streamr-docker-dev

  cross-client-testing:
    needs: [build-image]
    name: ${{ matrix.config-name }} ${{ matrix.test-name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-name:
          - stream-cleartext-unsigned
          - stream-cleartext-signed
          - stream-encrypted-shared-signed
          - stream-encrypted-shared-rotating-signed
          - stream-encrypted-exchanged-rotating-signed
          - stream-encrypted-exchanged-rotating-revoking-signed
        config-name:
          - default
          - js-only
          - java-only
          - realtime-only
          - js-realtime-only
          - java-realtime-only
    env:
      NUM_MESSAGES: 20
      TEST_NAME: ${{ matrix.test-name }}
      CONFIG_NAME: ${{ matrix.config-name }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: "16.x"
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: bootstrap-pkg
        working-directory: './'
        run: |
          npm install -g npm@8 --prefer-offline --no-audit
          npm run bootstrap-pkg @streamr/cross-client-testing
      - uses: actions/setup-java@v2.4.0
        with:
          distribution: 'zulu'
          java-version: '8'
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache Broker Docker Image
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-broker-docker-image
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Restore Broker Image
        run: docker load --input /tmp/docker-cache/broker-image.tar
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge brokers trackers nginx smtp"
      - uses: nick-invision/retry@v2
        name: run-client-testing
        with:
          max_attempts: 5
          timeout_minutes: 15
          retry_on: error
          command: cd packages/cross-client-testing && DEBUG='' make run
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.0.2
        with:
          dest: 'logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: docker-logs-${{ matrix.test-name }}-${{ matrix.config-name }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt}}
          path: logs
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
