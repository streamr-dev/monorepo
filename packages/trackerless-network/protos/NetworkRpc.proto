syntax = "proto3";

option optimize_for = CODE_SIZE;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "packages/dht/protos/DhtRpc.proto";

service NetworkRpc {
  rpc sendStreamMessage (StreamMessage) returns (google.protobuf.Empty);
  rpc leaveStreamPartNotice (LeaveStreamPartNotice) returns (google.protobuf.Empty);
}

service ProxyConnectionRpc {
  rpc requestConnection (ProxyConnectionRequest) returns (ProxyConnectionResponse);
}

service HandshakeRpc {
  rpc handshake (StreamPartHandshakeRequest) returns (StreamPartHandshakeResponse);
  rpc interleaveNotice (InterleaveNotice) returns (google.protobuf.Empty);
}

service NeighborUpdateRpc {
  rpc neighborUpdate (NeighborUpdate) returns (NeighborUpdate);
}

service TemporaryConnectionRpc {
  rpc openConnection (TemporaryConnectionRequest) returns (TemporaryConnectionResponse);
}

message MessageID {
  string streamId = 1;
  int32 streamPartition = 2;
  int64 timestamp = 3;
  int32 sequenceNumber = 4;
  bytes publisherId = 5;
  string messageChainId = 6;
}

message MessageRef {
  int64 timestamp = 1;
  int32 sequenceNumber = 2;
}

enum StreamMessageType {
  MESSAGE = 0;
  GROUP_KEY_REQUEST = 1;
  GROUP_KEY_RESPONSE = 2;
}

enum ContentType {
  JSON = 0;
  BINARY = 1;
}

enum EncryptionType {
  NONE = 0;
  AES = 1;
}

message StreamMessage {
  StreamMessageType messageType = 1;
  ContentType contentType = 2;
  EncryptionType encryptionType = 3;
  bytes content = 4;
  bytes signature = 5;
  // this is a required field but in generated NetworkRpc.ts it is incorrectly annotated as optional (NET-1082)
  MessageID messageId = 6;
  optional MessageRef previousMessageRef = 7;
  optional string groupKeyId = 8;
  optional GroupKey newGroupKey = 9;
}

message GroupKeyRequest {
  string requestId = 1;
  bytes recipientId = 2;
  bytes rsaPublicKey = 3;
  repeated string groupKeyIds = 4;
}

message GroupKeyResponse {
  string requestId = 1;
  bytes recipientId = 2;
  repeated GroupKey groupKeys = 3;
}

message GroupKey {
  string id = 1;
  bytes data = 2;
}

message StreamPartHandshakeRequest {
  string streamPartId = 1;
  string requestId = 2;
  optional bytes concurrentHandshakeTargetId = 3;
  repeated bytes neighborIds = 4;
  optional bytes interleaveSourceId = 5;
}

message StreamPartHandshakeResponse {
  bool accepted = 1;
  string requestId = 2;
  optional dht.PeerDescriptor interleaveTargetDescriptor = 3;
}

message InterleaveNotice {
  string streamPartId = 1;
  // this is a required field but in generated NetworkRpc.ts it is incorrectly annotated as optional (NET-1082)
  dht.PeerDescriptor interleaveTargetDescriptor = 2;
}

message LeaveStreamPartNotice {
  string randomGraphId = 1;
}

message NeighborUpdate {
  string randomGraphId = 1;
  bool removeMe = 2;
  repeated dht.PeerDescriptor neighborDescriptors = 3;
}

message ProxyConnectionRequest {
  ProxyDirection direction = 1;
  bytes userId = 2;
}

message ProxyConnectionResponse {
  bool accepted = 1;
}

message TemporaryConnectionRequest {
}

message TemporaryConnectionResponse {
  bool accepted = 1;
}

enum ProxyDirection {
  PUBLISH = 0;
  SUBSCRIBE = 1;
}
