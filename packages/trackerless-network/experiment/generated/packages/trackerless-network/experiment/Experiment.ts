// @generated by protobuf-ts 2.9.4 with parameter server_generic,generate_dependencies,long_type_number
// @generated from protobuf file "packages/trackerless-network/experiment/Experiment.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { PeerDescriptor } from "../../dht/protos/PeerDescriptor";
/**
 * @generated from protobuf message ExperimentServerMessage
 */
export interface ExperimentServerMessage {
    /**
     * @generated from protobuf oneof: instruction
     */
    instruction: {
        oneofKind: "start";
        /**
         * @generated from protobuf field: Start start = 1;
         */
        start: Start;
    } | {
        oneofKind: "joinExperiment";
        /**
         * @generated from protobuf field: JoinExperiment joinExperiment = 2;
         */
        joinExperiment: JoinExperiment;
    } | {
        oneofKind: "joinStreamPart";
        /**
         * @generated from protobuf field: JoinStreamPart joinStreamPart = 3;
         */
        joinStreamPart: JoinStreamPart;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message ExperimentClientMessage
 */
export interface ExperimentClientMessage {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "hello";
        /**
         * @generated from protobuf field: Hello hello = 2;
         */
        hello: Hello;
    } | {
        oneofKind: "started";
        /**
         * @generated from protobuf field: Started started = 3;
         */
        started: Started;
    } | {
        oneofKind: "experimentResults";
        /**
         * @generated from protobuf field: ExperimentResults experimentResults = 4;
         */
        experimentResults: ExperimentResults;
    } | {
        oneofKind: "instructionCompleted";
        /**
         * @generated from protobuf field: InstructionCompleted instructionCompleted = 5;
         */
        instructionCompleted: InstructionCompleted;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Hello
 */
export interface Hello {
}
/**
 * @generated from protobuf message Start
 */
export interface Start {
    /**
     * @generated from protobuf field: repeated peerDescriptor.PeerDescriptor entryPoints = 1;
     */
    entryPoints: PeerDescriptor[];
    /**
     * @generated from protobuf field: bool asEntryPoint = 2;
     */
    asEntryPoint: boolean;
    /**
     * @generated from protobuf field: bool join = 3;
     */
    join: boolean;
    /**
     * @generated from protobuf field: optional string nodeId = 4;
     */
    nodeId?: string;
}
/**
 * @generated from protobuf message Started
 */
export interface Started {
    /**
     * @generated from protobuf field: peerDescriptor.PeerDescriptor peerDescriptor = 1;
     */
    peerDescriptor?: PeerDescriptor;
    /**
     * @generated from protobuf field: int32 timeToJoin = 2;
     */
    timeToJoin: number;
}
/**
 * @generated from protobuf message JoinExperiment
 */
export interface JoinExperiment {
    /**
     * @generated from protobuf field: repeated peerDescriptor.PeerDescriptor entryPoints = 1;
     */
    entryPoints: PeerDescriptor[];
}
/**
 * @generated from protobuf message ExperimentResults
 */
export interface ExperimentResults {
    /**
     * @generated from protobuf field: string results = 1;
     */
    results: string;
}
/**
 * @generated from protobuf message JoinStreamPart
 */
export interface JoinStreamPart {
    /**
     * @generated from protobuf field: string streamPartId = 1;
     */
    streamPartId: string;
    /**
     * @generated from protobuf field: int32 neighborCount = 2;
     */
    neighborCount: number;
}
/**
 * @generated from protobuf message InstructionCompleted
 */
export interface InstructionCompleted {
}
// @generated message type with reflection information, may provide speed optimized methods
class ExperimentServerMessage$Type extends MessageType<ExperimentServerMessage> {
    constructor() {
        super("ExperimentServerMessage", [
            { no: 1, name: "start", kind: "message", oneof: "instruction", T: () => Start },
            { no: 2, name: "joinExperiment", kind: "message", oneof: "instruction", T: () => JoinExperiment },
            { no: 3, name: "joinStreamPart", kind: "message", oneof: "instruction", T: () => JoinStreamPart }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ExperimentServerMessage
 */
export const ExperimentServerMessage = new ExperimentServerMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExperimentClientMessage$Type extends MessageType<ExperimentClientMessage> {
    constructor() {
        super("ExperimentClientMessage", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "hello", kind: "message", oneof: "payload", T: () => Hello },
            { no: 3, name: "started", kind: "message", oneof: "payload", T: () => Started },
            { no: 4, name: "experimentResults", kind: "message", oneof: "payload", T: () => ExperimentResults },
            { no: 5, name: "instructionCompleted", kind: "message", oneof: "payload", T: () => InstructionCompleted }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ExperimentClientMessage
 */
export const ExperimentClientMessage = new ExperimentClientMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Hello$Type extends MessageType<Hello> {
    constructor() {
        super("Hello", []);
    }
}
/**
 * @generated MessageType for protobuf message Hello
 */
export const Hello = new Hello$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Start$Type extends MessageType<Start> {
    constructor() {
        super("Start", [
            { no: 1, name: "entryPoints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PeerDescriptor },
            { no: 2, name: "asEntryPoint", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "join", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "nodeId", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Start
 */
export const Start = new Start$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Started$Type extends MessageType<Started> {
    constructor() {
        super("Started", [
            { no: 1, name: "peerDescriptor", kind: "message", T: () => PeerDescriptor },
            { no: 2, name: "timeToJoin", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Started
 */
export const Started = new Started$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinExperiment$Type extends MessageType<JoinExperiment> {
    constructor() {
        super("JoinExperiment", [
            { no: 1, name: "entryPoints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PeerDescriptor }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message JoinExperiment
 */
export const JoinExperiment = new JoinExperiment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExperimentResults$Type extends MessageType<ExperimentResults> {
    constructor() {
        super("ExperimentResults", [
            { no: 1, name: "results", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ExperimentResults
 */
export const ExperimentResults = new ExperimentResults$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinStreamPart$Type extends MessageType<JoinStreamPart> {
    constructor() {
        super("JoinStreamPart", [
            { no: 1, name: "streamPartId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "neighborCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message JoinStreamPart
 */
export const JoinStreamPart = new JoinStreamPart$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstructionCompleted$Type extends MessageType<InstructionCompleted> {
    constructor() {
        super("InstructionCompleted", []);
    }
}
/**
 * @generated MessageType for protobuf message InstructionCompleted
 */
export const InstructionCompleted = new InstructionCompleted$Type();
