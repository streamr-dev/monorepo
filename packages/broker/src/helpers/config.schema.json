{
    "$id": "config.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Broker configuration format",
    "type": "object",
    "required": [
        "client",
        "plugins",
        "network"
    ],
    "additionalProperties": false,
    "properties": {
        "client": {
            "type": "object",
            "description": "Client configuration",
            "additionalProperties": true,
            "properties": {
                "auth": {
                    "type": "object",
                    "properties": {
                        "privateKey": {
                            "type": "string",
                            "pattern": "^(0x)?[a-fA-F0-9]{64}$"
                        }
                    }
                }
            }
        },
        "plugins": {
            "type": "object",
            "description": "Plugin configurations",
            "additionalProperties": true
        },
        "httpServer": {
            "type": [
                "object"
            ],
            "description": "HTTP server configuration",
            "default": {},
            "additionalProperties": false,
            "properties": {
                "port": {
                    "$ref": "#/definitions/port",
                    "description": "Port to start HTTP server on",
                    "default": 7171
                },
                "certFileName": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Path of certificate file to use for SSL",
                    "default": null
                },
                "privateKeyFileName": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Path of private key file to use for SSL",
                    "default": null
                }
            }
        },
        "generateSessionId": {
            "type": "boolean",
            "description": "Whether to generate a session id that gets attached to node id (or not). Disable for consistent node id.",
            "default": true
        },
        "network": {
            "type": "object",
            "description": "Network node settings",
            "additionalProperties": false,
            "properties": {
                "acceptProxyConnections": {
                    "type": "boolean",
                    "description": "If true, broker node accepts one way connections on the network overlay level",
                    "default": false
                }
            }
        },
        "apiAuthentication": {
            "type": [
                "object",
                "null"
            ],
            "description": "Plugins should restrict the API access: if an endpoint requires authentication, the user must provide one of the API keys e.g. in a request header",
            "default": null,
            "required": [
                "keys"
            ],
            "additionalProperties": false,
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "definitions": {
        "port": {
            "type": "number",
            "minimum": 0,
            "maximum": 65353
        },
        "smartContractConfig": {
            "type": "object",
            "required": [
                "contractAddress",
                "jsonRpcProvider"
            ],
            "additionalProperties": false,
            "properties": {
                "contractAddress": {
                    "type": "string",
                    "description": "Ethereum address of registry smart contract",
                    "pattern": "^0x[a-fA-F0-9]{40}$"
                },
                "jsonRpcProvider": {
                    "type": "string",
                    "description": "URL for JSON RPC Provider",
                    "format": "uri"
                }
            }
        }
    }
}
