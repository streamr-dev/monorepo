// @generated by protobuf-ts 2.9.4 with parameter server_generic,generate_dependencies,long_type_number
// @generated from protobuf file "packages/dht/protos/PeerDescriptor.proto" (package "peerDescriptor", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message peerDescriptor.PeerDescriptor
 */
export interface PeerDescriptor {
    /**
     * @generated from protobuf field: bytes nodeId = 1;
     */
    nodeId: Uint8Array;
    /**
     * @generated from protobuf field: peerDescriptor.NodeType type = 2;
     */
    type: NodeType;
    /**
     * @generated from protobuf field: peerDescriptor.ConnectivityMethod udp = 3;
     */
    udp?: ConnectivityMethod;
    /**
     * @generated from protobuf field: peerDescriptor.ConnectivityMethod tcp = 4;
     */
    tcp?: ConnectivityMethod;
    /**
     * @generated from protobuf field: peerDescriptor.ConnectivityMethod websocket = 5;
     */
    websocket?: ConnectivityMethod;
    /**
     * @generated from protobuf field: optional uint32 region = 6;
     */
    region?: number;
    /**
     * @generated from protobuf field: optional uint32 ipAddress = 7;
     */
    ipAddress?: number;
    /**
     * @generated from protobuf field: optional bytes publicKey = 8;
     */
    publicKey?: Uint8Array;
    /**
     * signature of fields 2-8
     *
     * @generated from protobuf field: optional bytes signature = 9;
     */
    signature?: Uint8Array;
}
/**
 * @generated from protobuf message peerDescriptor.ConnectivityMethod
 */
export interface ConnectivityMethod {
    /**
     * @generated from protobuf field: uint32 port = 1;
     */
    port: number;
    /**
     * @generated from protobuf field: string host = 2;
     */
    host: string;
    /**
     * @generated from protobuf field: bool tls = 3;
     */
    tls: boolean;
}
/**
 * @generated from protobuf enum peerDescriptor.NodeType
 */
export enum NodeType {
    /**
     * @generated from protobuf enum value: NODEJS = 0;
     */
    NODEJS = 0,
    /**
     * @generated from protobuf enum value: BROWSER = 1;
     */
    BROWSER = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class PeerDescriptor$Type extends MessageType<PeerDescriptor> {
    constructor() {
        super("peerDescriptor.PeerDescriptor", [
            { no: 1, name: "nodeId", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["peerDescriptor.NodeType", NodeType] },
            { no: 3, name: "udp", kind: "message", T: () => ConnectivityMethod },
            { no: 4, name: "tcp", kind: "message", T: () => ConnectivityMethod },
            { no: 5, name: "websocket", kind: "message", T: () => ConnectivityMethod },
            { no: 6, name: "region", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "ipAddress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "publicKey", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 9, name: "signature", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message peerDescriptor.PeerDescriptor
 */
export const PeerDescriptor = new PeerDescriptor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConnectivityMethod$Type extends MessageType<ConnectivityMethod> {
    constructor() {
        super("peerDescriptor.ConnectivityMethod", [
            { no: 1, name: "port", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "host", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tls", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message peerDescriptor.ConnectivityMethod
 */
export const ConnectivityMethod = new ConnectivityMethod$Type();
