// @generated by protobuf-ts 2.6.0 with parameter server_generic,generate_dependencies
// @generated from protobuf file "ProtoRpc.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message NotificationResponse
 */
export interface NotificationResponse {
    /**
     * @generated from protobuf field: bool sent = 1;
     */
    sent: boolean;
}
/**
 * @generated from protobuf message RpcMessage
 */
export interface RpcMessage {
    /**
     * @generated from protobuf field: map<string, string> header = 1;
     */
    header: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: bytes body = 2;
     */
    body: Uint8Array;
    /**
     * @generated from protobuf field: string requestId = 3;
     */
    requestId: string;
    /**
     * @generated from protobuf field: optional RpcResponseError responseError = 4;
     */
    responseError?: RpcResponseError;
}
/**
 * @generated from protobuf enum RpcResponseError
 */
export enum RpcResponseError {
    /**
     * @generated from protobuf enum value: SERVER_TIMOUT = 0;
     */
    SERVER_TIMOUT = 0,
    /**
     * @generated from protobuf enum value: CLIENT_TIMEOUT = 1;
     */
    CLIENT_TIMEOUT = 1,
    /**
     * @generated from protobuf enum value: SERVER_ERROR = 2;
     */
    SERVER_ERROR = 2,
    /**
     * @generated from protobuf enum value: UNKNOWN_RPC_METHOD = 3;
     */
    UNKNOWN_RPC_METHOD = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class NotificationResponse$Type extends MessageType<NotificationResponse> {
    constructor() {
        super("NotificationResponse", [
            { no: 1, name: "sent", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message NotificationResponse
 */
export const NotificationResponse = new NotificationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RpcMessage$Type extends MessageType<RpcMessage> {
    constructor() {
        super("RpcMessage", [
            { no: 1, name: "header", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 2, name: "body", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "requestId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "responseError", kind: "enum", opt: true, T: () => ["RpcResponseError", RpcResponseError] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RpcMessage
 */
export const RpcMessage = new RpcMessage$Type();
